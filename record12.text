
1.      Write a MongoDB query to create an INVOICE database and collections (CUSTOMER, PRODUCT) and its corresponding documents.

test> use Invoice
switched to db Invoice

Invoice> db.Customer.insert({cust_id:"1001",name:"Athu",phone:"8590119324",city: "Kannur"})  
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('67fe2252aa3a5641a8d861e0') }
}
Invoice> db.C

Invoice> db.Product.insertOne({p_id:"01",pname:"PEN",price:"100"})
{
  acknowledged: true,
  insertedId: ObjectId('67fe235daa3a5641a8d861e2')


2.      Write a MongoDB query to find all documents from the collection Customer

Invoice> db.Customer.find()
[
  {
    _id: ObjectId('67fe226eaa3a5641a8d861e1'),
    cust_id: '1001',
    name: 'Athu',
    phone: '8590119324',
    city: 'Kannur'
  }
]

3.      Write a MongoDB query to update the city in the collection Customer.

Invoice> db.Customer.update({ cust_id: "1001" }, { $set: { city: "Calicut" } })
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}


4.      Write a MongoDB query to delete the first matched document whose city is “Calicut”.
Invoice> db.Customer.deleteOne({city:"Calicut"})
{ acknowledged: true, deletedCount: 1 }
